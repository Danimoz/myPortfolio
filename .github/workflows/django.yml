name: Django CI

on:
  push:
    branches: [ "main-backend" ]
  pull_request:
    branches: [ "main-backend" ]

# on:
#    schedule: 
#      - cron: '*/15 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
        CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        RECIPIENT_ADDRESS: ${{ secrets.SRECIPIENT_ADDRESS }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        flake8
    - name: Coverage report
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
        CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        RECIPIENT_ADDRESS: ${{ secrets.SRECIPIENT_ADDRESS }}
      run: |
        coverage run manage.py test
        coverage report
    - name: Run Tests
      run: |
        python manage.py test